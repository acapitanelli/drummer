#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from drummer.utils import ClassLoader
from sys import exit as sys_exit
from sys import argv as sys_argv
import argparse


class ArgParser:

    def process(self, sys_argv):

        parser = self.define_parsers()
        args = vars(parser.parse_args(sys_argv[1:]))

        # return args
        if args:

            classname = args.get('classname')
            del args['classname']

            return classname, args

        else:
            print('Syntax error. Use -h option for help.')
            sys_exit()


    def define_parsers(self):

        # create the top-level parser
        parser = argparse.ArgumentParser(prog='Drummer Admin')
        # add subparsers
        subparsers = parser.add_subparsers(help='command help', title='Admin commands', description='Drummer Management')

        # init
        parser_00 = subparsers.add_parser('init', help='Init Drummer environment')
        parser_00.add_argument('root_dir', action='store', help='Root folder for Drummer environment')
        parser_00.add_argument(
            '--database',
            dest='database',
            const='drummer.sqlite',
            default='drummer.sqlite',
            action='store',
            nargs='?',
            type=str,
            help='Filename for internal schedulation database'
        )
        parser_00.set_defaults(classname='EnvInit')

        return parser


if __name__ == '__main__':

    # get command from console
    classname, args = ArgParser().process(sys_argv)

    # load command
    Command = ClassLoader().load('drummer/console/commands', classname)

    # execute command
    Command().execute(args)
